# Overview #

**ifmap.js** is an IF-MAP client library implementation in JavaScript. It should
run in any reasonably modern web browser or other JavaScript interpreter. For a
description of IF-MAP see the specification and other documentation at
[ifmapdev.com/documentation](http://ifmapdev.com/documentation). Due to the
same-origin policy within the browser, IF-MAP clients built with **ifmap.js**
must send all requests through a proxy, sold separately. For a fully-functioning
example see [jsmap](http://github.com/andrewmbenton/jsmap).

Enough talk. Here's an...

## Example ##

    // Create a client and establish a session with a MAP server
    var client = new IfmapClient('https://itsa:secret@ifmap.example.com:8686/ifmap');
    client.newSession();
    
    console.log(client.request); // Check out the IF-MAP request we just sent
    
    // Create some identifiers
    var me = new IfmapIdentifier('identity', {'type': 'username', 'name': 'amb'});
    var mySession = new IfmapIdentifier('access-request', {'name': '103:aw8h13nadwnpefgasd'});
    
    // And some metadata
    var authenticatedAs = new IfmapMetadata('authenticated-as');
    
    // And publish it
    client.publishUpdate([me, mySession], authenticatedAs, function(data, status, xhr) { console.log(data['soap']) });

## Dependencies ##

**ifmap.js** relies on [jQuery](http://jquery.com). Specifically, jQuery.post()
and jQuery.each() are used heavily.

## Known Issues ##

-  Pulling out session-id and publisher-id elements from a newSession response
   won't work unless the elements are namespaced with the 'ifmap' prefix.
-  IfmapMetadata needs work to support all standard IF-MAP metadata types.
-  Support for custom metadata isn't included.

# IfmapClient(url) #

Set up an IF-MAP client and point it at +url+, presumably the SOAP endpoint of
some MAP server. The client works through a proxy, sold separately. The proxy
must accept POST requests with parameters 'url' and 'soap', which it should
use to send a SOAP request to 'url' with 'soap' as the body.
